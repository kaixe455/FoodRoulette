// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
	BaseClientOptions,
	SchemaInference,
	XataRecord,
} from "@xata.io/client";

const tables = [
	{
		name: "foodTypes",
		columns: [
			{ name: "name", type: "string" },
			{ name: "tested", type: "bool", notNull: true, defaultValue: "false" },
		],
	},
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type FoodTypes = InferredTypes["foodTypes"];
export type FoodTypesRecord = FoodTypes & XataRecord;

export type DatabaseSchema = {
	foodTypes: FoodTypesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
	databaseURL:
		"https://ngel-Angulo-Nieto-s-workspace-gs09ru.eu-west-1.xata.sh/db/foodroulette",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
	constructor(options?: BaseClientOptions) {
		super({ ...defaultOptions, ...options }, tables);
	}
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
	if (instance) return instance;

	instance = new XataClient();
	return instance;
};
